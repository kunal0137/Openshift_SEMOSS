apiVersion: v1
kind: Template
metadata:
  name: semoss
  annotations:
    description: "Template deployment for semoss"
    iconClass: "icon-redis"
    tags: "Analytics,Semoss"
objects:
  - apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: "${NAME}-semoss"
    labels:
      app.kubernetes.io/name: "${NAME}-semoss"
  spec:
    replicas: "${{REPLICA_COUNT}}"
    selector:
      matchLabels:
        app.kubernetes.io/name: "${NAME}-semoss"
    template:
      metadata:
        labels:
          app.kubernetes.io/name: "${NAME}-semoss"
      spec:
        containers:
          - name: "${NAME}-semoss"
            image: "${CONTAINER_IMAGE}:${IMAGE_TAG}"
            imagePullPolicy: "{PULL_POLICY}"
            readinessProbe:
             httpGet:
              path: /Monolith/api/config
              port: 8080
             initialDelaySeconds: 60
             timeoutSeconds: 5
             periodSeconds: 5
            livenessProbe:
             httpGet:
              path: /Monolith/api/config
              port: 8080
             initialDelaySeconds: 
             timeoutSeconds: {{ .Values.semoss.livenessProbe.timeoutSeconds }}
             periodSeconds: {{ .Values.semoss.livenessProbe.periodSeconds }}
            {{- end }}
            command:
            - /bin/bash
            args:
              - -c
              - echo export REMOTE_SECURITY_IP=$REMOTE_SECURITY_KEY  >> ~/.bashrc; echo export REMOTE_LOCALMASTER_IP=$REMOTE_LOCALMASTER_KEY  >> ~/.bashrc; echo export REMOTE_THEMES_IP=$REMOTE_THEMES_KEY  >> ~/.bashrc; echo export ZK=$REMOTE_ZK_KEY >> ~/.bashrc; echo export HOST=$POD_IP:8080 >> ~/.bashrc; source ~/.bashrc; git reset --hard; git pull; chmod 777 *; /opt/semoss-artifacts/artifacts/scripts/runCS.sh
            env:
            - name: REMOTE_SECURITY_KEY
              value: {{printf "%s%s_%s:%s%s_%s" "$" .Values.env "SECURITY_SERVICE_HOST" "$" .Values.env "SECURITY_SERVICE_PORT" | upper}}
            - name: REMOTE_LOCALMASTER_KEY
              value: {{printf "%s%s_%s:%s%s_%s" "$" .Values.env "LOCALMASTER_SERVICE_HOST" "$" .Values.env "LOCALMASTER_SERVICE_PORT" | upper}}
            - name: REMOTE_THEMES_KEY
              value: {{printf "%s%s_%s:%s%s_%s" "$" .Values.env "THEMES_SERVICE_HOST" "$" .Values.env "THEMES_SERVICE_PORT" | upper}}
            - name: REMOTE_ZK_KEY
              value: {{printf "%s%s_%s:%s%s_%s" "$" .Values.env "ZK_SERVICE_HOST" "$" .Values.env "ZK_SERVICE_PORT" | upper}}
            - name: REMOTE_SECURITY
              value: "true"
            - name: REMOTE_LOCALMASTER
              value: "true"
            - name: REMOTE_THEMES
              value: "true"
            - name: POD_IP
              valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: status.podIP
            ports:
            - containerPort: {{.Values.semoss.service.port}}
parameters:
- name: NAME
  displayName: Release Name
  description: Name for semoss release
  required: true
  value: semoss
- name: REPLICA_COUNT
  description: Number of replicas to run
  value: "2"
  required: true
- name: CONTAINER_IMAGE
  displayName: Container Image
  description: Location for the container image
  required: true
  value: semoss/docker
- name: IMAGE_TAG
  displayName: Image Tag
  description: Tag for the image
  required: true
  value: latest
- name: PULL_POLICY
  displayName: Pull Policy
  description: Pull Policy
  required: true
  value: IfNotPresent
labels:
  redis: master
